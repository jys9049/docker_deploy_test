name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }} # GitHub Secrets에서 SSH 개인 키 가져오기

      - name: Deploy to EC2 instance
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
          NEXT_PUBLIC_TEST_KEY: ${{ secrets.NEXT_PUBLIC_TEST_KEY }}
          TEST_KEY: ${{ secrets.TEST_KEY }}
        run: |
          echo "Setting up SSH known_hosts"
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ env.EC2_HOST }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts # 권한 문제 방지

          echo "Executing deployment script on EC2..."
          ssh -T ${{ env.EC2_USERNAME }}@${{ env.EC2_HOST }}
            echo "Connected to EC2 instance: ${{ env.EC2_HOST }}"
            
            cd docker_deploy_test 
            
            echo "Pulling latest code from Git..."
            git pull origin main
            
            echo "Creating/Updating .env file for runtime..."
            echo "${{ env.ENV_FILE_CONTENT }}" > app.env 
            echo "${{ env.TEST_KEY }}" > app.env
            
            echo "Building Docker images (web service specifically)..."

            sudo docker-compose build --no-cache \
              --build-arg BUILD_ARG_NEXT_PUBLIC_API_URL="${{secrets.NEXT_PUBLIC_TEST_KEY}}" \
            web
            
            echo "Stopping and recreating services..."
            sudo docker compose down -v
            sudo docker compose up -d
            
            echo "Cleaning up old Docker images (optional)..."
            sudo docker image prune -af
            
            echo "Deployment to EC2 complete!"
          EOF
